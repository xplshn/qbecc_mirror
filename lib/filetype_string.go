// Code generated by "stringer -type=fileType,symbolType,mode"; DO NOT EDIT.

package qbecc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[fileInvalid-0]
	_ = x[fileC-1]
	_ = x[fileH-2]
	_ = x[fileELF-3]
	_ = x[fileHostAsm-4]
	_ = x[fileQbeSSA-5]
}

const _fileType_name = "fileInvalidfileCfileHfileELFfileHostAsmfileQbeSSA"

var _fileType_index = [...]uint8{0, 11, 16, 21, 28, 39, 49}

func (i fileType) String() string {
	if i < 0 || i >= fileType(len(_fileType_index)-1) {
		return "fileType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _fileType_name[_fileType_index[i]:_fileType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[symbolInvalid-0]
	_ = x[symbolFunction-1]
	_ = x[symbolExportedFunction-2]
	_ = x[symbolData-3]
	_ = x[symbolExportedData-4]
}

const _symbolType_name = "symbolInvalidsymbolFunctionsymbolExportedFunctionsymbolDatasymbolExportedData"

var _symbolType_index = [...]uint8{0, 13, 27, 49, 59, 77}

func (i symbolType) String() string {
	if i < 0 || i >= symbolType(len(_symbolType_index)-1) {
		return "symbolType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _symbolType_name[_symbolType_index[i]:_symbolType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[void-0]
	_ = x[lvalue-1]
	_ = x[rvalue-2]
	_ = x[call-3]
}

const _mode_name = "voidlvaluervaluecall"

var _mode_index = [...]uint8{0, 4, 10, 16, 20}

func (i mode) String() string {
	if i < 0 || i >= mode(len(_mode_index)-1) {
		return "mode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _mode_name[_mode_index[i]:_mode_index[i+1]]
}
